generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name  String?
  email String  @unique
 password String 
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  products Product[] @relation("CategoryToProduct")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
id String @id @default(auto()) @map("_id") @db.ObjectId
categoryId String @db.ObjectId
category Category @relation("CategoryToProduct", fields:[categoryId],references: [id])
name String
price String
isFeatured Boolean @default(false)
isArchived Boolean @default(false)
sizeId String @db.ObjectId
size Size @relation(fields: [sizeId],references: [id])
colorId String @db.ObjectId
color Color @relation(fields: [colorId],references: [id])
images Image[]
orderItems OrderItem[]

 
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([sizeId])
 @@index([colorId])
}

 model Image {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  productId String @db.ObjectId
  product Product @relation(fields: [productId],references: [id], onDelete:Cascade)
 url String
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

 @@index([productId])
 }

 model Order {
   id String @id @default(auto()) @map("_id") @db.ObjectId
   orderItems OrderItem[]
   clientId String @db.ObjectId
   client Client @relation (fields: [clientId], references: [id]) 
   isPaid Boolean
   phone String @default("")
   address String @default("")
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now())

 }

 model OrderItem {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String @db.ObjectId
  order Order @relation(fields: [orderId], references: [id])
  productId String @db.ObjectId
  product Product @relation(fields: [productId],references: [id])
  amount Int

  @@index([orderId])
  @@index([productId])
 }

 model Client {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  order Order[]
  name  String?
  email String  @unique
  password String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 }